<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="034c36f2-7ffe-44cf-931a-e058bbecb192" name="magicleap@IASL-MAGICLEAP 2017-12-14 14:47:16" runUser="GOING\magicleap" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="16c602e4-3b82-48a6-92a6-f9ba09bc456d">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment enabled="false" runDeploymentRoot="magicleap_IASL-MAGICLEAP 2017-12-14 14_47_16">
      <DeploymentItem filename="C:\Users\magicleap\Desktop\PepFragmentIonGenerator 2017-12-04\PepFragmentIonGenerator\bin\Debug\PepFragmentIonGenerator.dll" />
    </Deployment>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2017-12-14T14:47:16.7475007+08:00" queuing="2017-12-14T14:47:18.3406418+08:00" start="2017-12-14T14:47:18.5407857+08:00" finish="2017-12-14T14:47:19.2552969+08:00" />
  <ResultSummary outcome="Failed">
    <Counters total="8" executed="8" passed="3" error="0" failed="5" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="CheckModification" storage="c:\users\magicleap\desktop\pepfragmentiongenerator 2017-12-04\pepfragmentiongenerator\testproject1\bin\debug\testproject1.dll" id="f9a0c639-a890-d9ce-99dc-166ae0a28892">
      <Execution id="05127e0e-672a-43c2-9d2b-5e727c99ba84" />
      <TestMethod codeBase="C:/Users/magicleap/Desktop/PepFragmentIonGenerator 2017-12-04/PepFragmentIonGenerator/TestProject1/bin/Debug/TestProject1.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject1.UnitTest1, TestProject1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="CheckModification" />
    </UnitTest>
    <UnitTest name="TestGetFragmentatWithOutMod" storage="c:\users\magicleap\desktop\pepfragmentiongenerator 2017-12-04\pepfragmentiongenerator\testproject1\bin\debug\testproject1.dll" id="71ca4d67-51d6-196d-41cd-0626d29a2548">
      <Execution id="b636c68f-a499-447e-bb2f-aa218764771d" />
      <TestMethod codeBase="C:/Users/magicleap/Desktop/PepFragmentIonGenerator 2017-12-04/PepFragmentIonGenerator/TestProject1/bin/Debug/TestProject1.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject1.UnitTest1, TestProject1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="TestGetFragmentatWithOutMod" />
    </UnitTest>
    <UnitTest name="GetModificationLi" storage="c:\users\magicleap\desktop\pepfragmentiongenerator 2017-12-04\pepfragmentiongenerator\testproject1\bin\debug\testproject1.dll" id="c15e4676-c5ee-db06-acf3-8d37258c7a4c">
      <Execution id="2281c6e8-e733-4bfb-8390-b1a027e98404" />
      <TestMethod codeBase="C:/Users/magicleap/Desktop/PepFragmentIonGenerator 2017-12-04/PepFragmentIonGenerator/TestProject1/bin/Debug/TestProject1.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject1.UnitTest1, TestProject1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="GetModificationLi" />
    </UnitTest>
    <UnitTest name="TestRegex" storage="c:\users\magicleap\desktop\pepfragmentiongenerator 2017-12-04\pepfragmentiongenerator\testproject1\bin\debug\testproject1.dll" id="766f967e-cd62-c9c3-c250-d575d5115db6">
      <Execution id="6d8f17ac-ba70-4940-b404-4e1d48e24aae" />
      <TestMethod codeBase="C:/Users/magicleap/Desktop/PepFragmentIonGenerator 2017-12-04/PepFragmentIonGenerator/TestProject1/bin/Debug/TestProject1.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject1.UnitTest1, TestProject1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="TestRegex" />
    </UnitTest>
    <UnitTest name="RefractoringTextParser" storage="c:\users\magicleap\desktop\pepfragmentiongenerator 2017-12-04\pepfragmentiongenerator\testproject1\bin\debug\testproject1.dll" id="beafb084-8735-a82d-4bd9-9d531f023de9">
      <Execution id="cd2935ed-88a8-484d-a40e-35dc5af58711" />
      <TestMethod codeBase="C:/Users/magicleap/Desktop/PepFragmentIonGenerator 2017-12-04/PepFragmentIonGenerator/TestProject1/bin/Debug/TestProject1.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject1.UnitTest1, TestProject1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="RefractoringTextParser" />
    </UnitTest>
    <UnitTest name="TestModnWithText" storage="c:\users\magicleap\desktop\pepfragmentiongenerator 2017-12-04\pepfragmentiongenerator\testproject1\bin\debug\testproject1.dll" id="01cb3754-85ef-de85-c558-307a6f4af7e6">
      <Execution id="907c0467-44fe-494b-ac1e-d027eed267e1" />
      <TestMethod codeBase="C:/Users/magicleap/Desktop/PepFragmentIonGenerator 2017-12-04/PepFragmentIonGenerator/TestProject1/bin/Debug/TestProject1.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject1.UnitTest1, TestProject1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="TestModnWithText" />
    </UnitTest>
    <UnitTest name="InitiateNumMod" storage="c:\users\magicleap\desktop\pepfragmentiongenerator 2017-12-04\pepfragmentiongenerator\testproject1\bin\debug\testproject1.dll" id="df5fa9ef-4d26-8455-d096-4e68827fecfb">
      <Execution id="b2c0c9af-2c9d-49d7-9d9e-1550b7eab614" />
      <TestMethod codeBase="C:/Users/magicleap/Desktop/PepFragmentIonGenerator 2017-12-04/PepFragmentIonGenerator/TestProject1/bin/Debug/TestProject1.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject1.UnitTest1, TestProject1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="InitiateNumMod" />
    </UnitTest>
    <UnitTest name="GetModification" storage="c:\users\magicleap\desktop\pepfragmentiongenerator 2017-12-04\pepfragmentiongenerator\testproject1\bin\debug\testproject1.dll" id="1fc7d2db-230e-a205-77c4-36df52d26c74">
      <Execution id="46f6570b-db22-4f0e-85c1-985c65ebe34e" />
      <TestMethod codeBase="C:/Users/magicleap/Desktop/PepFragmentIonGenerator 2017-12-04/PepFragmentIonGenerator/TestProject1/bin/Debug/TestProject1.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject1.UnitTest1, TestProject1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="GetModification" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="01cb3754-85ef-de85-c558-307a6f4af7e6" executionId="907c0467-44fe-494b-ac1e-d027eed267e1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1fc7d2db-230e-a205-77c4-36df52d26c74" executionId="46f6570b-db22-4f0e-85c1-985c65ebe34e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="71ca4d67-51d6-196d-41cd-0626d29a2548" executionId="b636c68f-a499-447e-bb2f-aa218764771d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="766f967e-cd62-c9c3-c250-d575d5115db6" executionId="6d8f17ac-ba70-4940-b404-4e1d48e24aae" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="beafb084-8735-a82d-4bd9-9d531f023de9" executionId="cd2935ed-88a8-484d-a40e-35dc5af58711" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c15e4676-c5ee-db06-acf3-8d37258c7a4c" executionId="2281c6e8-e733-4bfb-8390-b1a027e98404" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="df5fa9ef-4d26-8455-d096-4e68827fecfb" executionId="b2c0c9af-2c9d-49d7-9d9e-1550b7eab614" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f9a0c639-a890-d9ce-99dc-166ae0a28892" executionId="05127e0e-672a-43c2-9d2b-5e727c99ba84" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="907c0467-44fe-494b-ac1e-d027eed267e1" testId="01cb3754-85ef-de85-c558-307a6f4af7e6" testName="TestModnWithText" computerName="IASL-MAGICLEAP" duration="00:00:00.3039949" startTime="2017-12-14T14:47:18.6078332+08:00" endTime="2017-12-14T14:47:19.1642320+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="907c0467-44fe-494b-ac1e-d027eed267e1">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject1.UnitTest1.TestModnWithText threw exception: 
System.IO.FileNotFoundException: 找不到檔案 'C:\Users\magicleap\Desktop\PepFragmentIonGenerator 2017-12-04\PepFragmentIonGenerator\TestProject1\bin\Debug\PeptideAnnotation.xml'。</Message>
          <StackTrace>    於 System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
   於 System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   於 System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize)
   於 System.Xml.XmlDownloadManager.GetStream(Uri uri, ICredentials credentials, IWebProxy proxy, RequestCachePolicy cachePolicy)
   於 System.Xml.XmlUrlResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn)
   於 System.Xml.XmlTextReaderImpl.OpenUrlDelegate(Object xmlResolver)
   於 System.Threading.CompressedStack.runTryCode(Object userData)
   於 System.Runtime.CompilerServices.RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup(TryCode code, CleanupCode backoutCode, Object userData)
   於 System.Threading.CompressedStack.Run(CompressedStack compressedStack, ContextCallback callback, Object state)
   於 System.Xml.XmlTextReaderImpl.OpenUrl()
   於 System.Xml.XmlTextReaderImpl.Read()
   於 System.Xml.XmlLoader.Load(XmlDocument doc, XmlReader reader, Boolean preserveWhitespace)
   於 System.Xml.XmlDocument.Load(XmlReader reader)
   於 System.Xml.XmlDocument.Load(String filename)
   於 PepFragmentIonGenerator.GetFragments.modGenerator(String xmlAnnotation) 於 C:\Users\magicleap\Desktop\PepFragmentIonGenerator 2017-12-04\PepFragmentIonGenerator\GetFragments.cs: 行 291
   於 PepFragmentIonGenerator.GetFragments.GetFragments_AAStr_Mod(String pepSeq, Boolean b_CreatNeutralLossPeak, String PeptideAnnotationFile) 於 C:\Users\magicleap\Desktop\PepFragmentIonGenerator 2017-12-04\PepFragmentIonGenerator\GetFragments.cs: 行 38
   於 TestProject1.UnitTest1.TestModnWithText() 於 C:\Users\magicleap\Desktop\PepFragmentIonGenerator 2017-12-04\PepFragmentIonGenerator\TestProject1\UnitTest1.cs: 行 55
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="46f6570b-db22-4f0e-85c1-985c65ebe34e" testId="1fc7d2db-230e-a205-77c4-36df52d26c74" testName="GetModification" computerName="IASL-MAGICLEAP" duration="00:00:00.0018845" startTime="2017-12-14T14:47:19.1662334+08:00" endTime="2017-12-14T14:47:19.1712373+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="46f6570b-db22-4f0e-85c1-985c65ebe34e">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject1.UnitTest1.GetModification threw exception: 
System.IO.FileNotFoundException: 找不到檔案 'C:\Users\magicleap\Desktop\PepFragmentIonGenerator 2017-12-04\PepFragmentIonGenerator\TestProject1\bin\Debug\PeptideAnnotation.xml'。</Message>
          <StackTrace>    於 System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
   於 System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   於 System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize)
   於 System.Xml.XmlDownloadManager.GetStream(Uri uri, ICredentials credentials, IWebProxy proxy, RequestCachePolicy cachePolicy)
   於 System.Xml.XmlUrlResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn)
   於 System.Xml.XmlTextReaderImpl.OpenUrlDelegate(Object xmlResolver)
   於 System.Threading.CompressedStack.runTryCode(Object userData)
   於 System.Runtime.CompilerServices.RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup(TryCode code, CleanupCode backoutCode, Object userData)
   於 System.Threading.CompressedStack.Run(CompressedStack compressedStack, ContextCallback callback, Object state)
   於 System.Xml.XmlTextReaderImpl.OpenUrl()
   於 System.Xml.XmlTextReaderImpl.Read()
   於 System.Xml.XmlLoader.Load(XmlDocument doc, XmlReader reader, Boolean preserveWhitespace)
   於 System.Xml.XmlDocument.Load(XmlReader reader)
   於 System.Xml.XmlDocument.Load(String filename)
   於 PepFragmentIonGenerator.GetFragments.modGenerator(String xmlAnnotation) 於 C:\Users\magicleap\Desktop\PepFragmentIonGenerator 2017-12-04\PepFragmentIonGenerator\GetFragments.cs: 行 291
   於 PepFragmentIonGenerator.GetFragments.GetFragments_AAStr_Mod(String pepSeq, Boolean b_CreatNeutralLossPeak, String PeptideAnnotationFile) 於 C:\Users\magicleap\Desktop\PepFragmentIonGenerator 2017-12-04\PepFragmentIonGenerator\GetFragments.cs: 行 38
   於 TestProject1.UnitTest1.GetModification() 於 C:\Users\magicleap\Desktop\PepFragmentIonGenerator 2017-12-04\PepFragmentIonGenerator\TestProject1\UnitTest1.cs: 行 192
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b636c68f-a499-447e-bb2f-aa218764771d" testId="71ca4d67-51d6-196d-41cd-0626d29a2548" testName="TestGetFragmentatWithOutMod" computerName="IASL-MAGICLEAP" duration="00:00:00.0022249" startTime="2017-12-14T14:47:19.1722377+08:00" endTime="2017-12-14T14:47:19.1772413+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b636c68f-a499-447e-bb2f-aa218764771d">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject1.UnitTest1.TestGetFragmentatWithOutMod threw exception: 
System.IO.FileNotFoundException: 找不到檔案 'C:\Users\magicleap\Desktop\PepFragmentIonGenerator 2017-12-04\PepFragmentIonGenerator\TestProject1\bin\Debug\PeptideAnnotation.xml'。</Message>
          <StackTrace>    於 System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
   於 System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   於 System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize)
   於 System.Xml.XmlDownloadManager.GetStream(Uri uri, ICredentials credentials, IWebProxy proxy, RequestCachePolicy cachePolicy)
   於 System.Xml.XmlUrlResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn)
   於 System.Xml.XmlTextReaderImpl.OpenUrlDelegate(Object xmlResolver)
   於 System.Threading.CompressedStack.runTryCode(Object userData)
   於 System.Runtime.CompilerServices.RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup(TryCode code, CleanupCode backoutCode, Object userData)
   於 System.Threading.CompressedStack.Run(CompressedStack compressedStack, ContextCallback callback, Object state)
   於 System.Xml.XmlTextReaderImpl.OpenUrl()
   於 System.Xml.XmlTextReaderImpl.Read()
   於 System.Xml.XmlLoader.Load(XmlDocument doc, XmlReader reader, Boolean preserveWhitespace)
   於 System.Xml.XmlDocument.Load(XmlReader reader)
   於 System.Xml.XmlDocument.Load(String filename)
   於 PepFragmentIonGenerator.GetFragments.modGenerator(String xmlAnnotation) 於 C:\Users\magicleap\Desktop\PepFragmentIonGenerator 2017-12-04\PepFragmentIonGenerator\GetFragments.cs: 行 291
   於 PepFragmentIonGenerator.GetFragments.GetFragments_AAStr_Mod(String pepSeq, Boolean b_CreatNeutralLossPeak, String PeptideAnnotationFile) 於 C:\Users\magicleap\Desktop\PepFragmentIonGenerator 2017-12-04\PepFragmentIonGenerator\GetFragments.cs: 行 38
   於 TestProject1.UnitTest1.TestGetFragmentatWithOutMod() 於 C:\Users\magicleap\Desktop\PepFragmentIonGenerator 2017-12-04\PepFragmentIonGenerator\TestProject1\UnitTest1.cs: 行 34
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6d8f17ac-ba70-4940-b404-4e1d48e24aae" testId="766f967e-cd62-c9c3-c250-d575d5115db6" testName="TestRegex" computerName="IASL-MAGICLEAP" duration="00:00:00.0007523" startTime="2017-12-14T14:47:19.1782420+08:00" endTime="2017-12-14T14:47:19.1822449+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6d8f17ac-ba70-4940-b404-4e1d48e24aae">
    </UnitTestResult>
    <UnitTestResult executionId="cd2935ed-88a8-484d-a40e-35dc5af58711" testId="beafb084-8735-a82d-4bd9-9d531f023de9" testName="RefractoringTextParser" computerName="IASL-MAGICLEAP" duration="00:00:00.0018756" startTime="2017-12-14T14:47:19.1832459+08:00" endTime="2017-12-14T14:47:19.1872482+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cd2935ed-88a8-484d-a40e-35dc5af58711">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject1.UnitTest1.RefractoringTextParser threw exception: 
System.IO.FileNotFoundException: 找不到檔案 'C:\Users\magicleap\Desktop\PepFragmentIonGenerator 2017-12-04\PepFragmentIonGenerator\TestProject1\bin\Debug\PeptideAnnotation.xml'。</Message>
          <StackTrace>    於 System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
   於 System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   於 System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize)
   於 System.Xml.XmlDownloadManager.GetStream(Uri uri, ICredentials credentials, IWebProxy proxy, RequestCachePolicy cachePolicy)
   於 System.Xml.XmlUrlResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn)
   於 System.Xml.XmlTextReaderImpl.OpenUrlDelegate(Object xmlResolver)
   於 System.Threading.CompressedStack.runTryCode(Object userData)
   於 System.Runtime.CompilerServices.RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup(TryCode code, CleanupCode backoutCode, Object userData)
   於 System.Threading.CompressedStack.Run(CompressedStack compressedStack, ContextCallback callback, Object state)
   於 System.Xml.XmlTextReaderImpl.OpenUrl()
   於 System.Xml.XmlTextReaderImpl.Read()
   於 System.Xml.XmlLoader.Load(XmlDocument doc, XmlReader reader, Boolean preserveWhitespace)
   於 System.Xml.XmlDocument.Load(XmlReader reader)
   於 System.Xml.XmlDocument.Load(String filename)
   於 PepFragmentIonGenerator.GetFragments.modGenerator(String xmlAnnotation) 於 C:\Users\magicleap\Desktop\PepFragmentIonGenerator 2017-12-04\PepFragmentIonGenerator\GetFragments.cs: 行 291
   於 PepFragmentIonGenerator.GetFragments.GetFragments_AAStr_Mod(String pepSeq, Boolean b_CreatNeutralLossPeak, String PeptideAnnotationFile) 於 C:\Users\magicleap\Desktop\PepFragmentIonGenerator 2017-12-04\PepFragmentIonGenerator\GetFragments.cs: 行 38
   於 TestProject1.UnitTest1.RefractoringTextParser() 於 C:\Users\magicleap\Desktop\PepFragmentIonGenerator 2017-12-04\PepFragmentIonGenerator\TestProject1\UnitTest1.cs: 行 77
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2281c6e8-e733-4bfb-8390-b1a027e98404" testId="c15e4676-c5ee-db06-acf3-8d37258c7a4c" testName="GetModificationLi" computerName="IASL-MAGICLEAP" duration="00:00:00.0002012" startTime="2017-12-14T14:47:19.1882492+08:00" endTime="2017-12-14T14:47:19.1912510+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2281c6e8-e733-4bfb-8390-b1a027e98404">
    </UnitTestResult>
    <UnitTestResult executionId="b2c0c9af-2c9d-49d7-9d9e-1550b7eab614" testId="df5fa9ef-4d26-8455-d096-4e68827fecfb" testName="InitiateNumMod" computerName="IASL-MAGICLEAP" duration="00:00:00.0016726" startTime="2017-12-14T14:47:19.1922520+08:00" endTime="2017-12-14T14:47:19.1952539+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b2c0c9af-2c9d-49d7-9d9e-1550b7eab614">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject1.UnitTest1.InitiateNumMod threw exception: 
System.IO.FileNotFoundException: 找不到檔案 'C:\Users\magicleap\Desktop\PepFragmentIonGenerator 2017-12-04\PepFragmentIonGenerator\TestProject1\bin\Debug\PeptideAnnotation.xml'。</Message>
          <StackTrace>    於 System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
   於 System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   於 System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize)
   於 System.Xml.XmlDownloadManager.GetStream(Uri uri, ICredentials credentials, IWebProxy proxy, RequestCachePolicy cachePolicy)
   於 System.Xml.XmlUrlResolver.GetEntity(Uri absoluteUri, String role, Type ofObjectToReturn)
   於 System.Xml.XmlTextReaderImpl.OpenUrlDelegate(Object xmlResolver)
   於 System.Threading.CompressedStack.runTryCode(Object userData)
   於 System.Runtime.CompilerServices.RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup(TryCode code, CleanupCode backoutCode, Object userData)
   於 System.Threading.CompressedStack.Run(CompressedStack compressedStack, ContextCallback callback, Object state)
   於 System.Xml.XmlTextReaderImpl.OpenUrl()
   於 System.Xml.XmlTextReaderImpl.Read()
   於 System.Xml.XmlLoader.Load(XmlDocument doc, XmlReader reader, Boolean preserveWhitespace)
   於 System.Xml.XmlDocument.Load(XmlReader reader)
   於 System.Xml.XmlDocument.Load(String filename)
   於 PepFragmentIonGenerator.GetFragments.modGenerator(String xmlAnnotation) 於 C:\Users\magicleap\Desktop\PepFragmentIonGenerator 2017-12-04\PepFragmentIonGenerator\GetFragments.cs: 行 291
   於 PepFragmentIonGenerator.GetFragments.GetFragments_AAStr_Mod(String pepSeq, Boolean b_CreatNeutralLossPeak, String PeptideAnnotationFile) 於 C:\Users\magicleap\Desktop\PepFragmentIonGenerator 2017-12-04\PepFragmentIonGenerator\GetFragments.cs: 行 38
   於 TestProject1.UnitTest1.InitiateNumMod() 於 C:\Users\magicleap\Desktop\PepFragmentIonGenerator 2017-12-04\PepFragmentIonGenerator\TestProject1\UnitTest1.cs: 行 161
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="05127e0e-672a-43c2-9d2b-5e727c99ba84" testId="f9a0c639-a890-d9ce-99dc-166ae0a28892" testName="CheckModification" computerName="IASL-MAGICLEAP" duration="00:00:00.0008185" startTime="2017-12-14T14:47:19.1962549+08:00" endTime="2017-12-14T14:47:19.1992568+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="05127e0e-672a-43c2-9d2b-5e727c99ba84">
    </UnitTestResult>
  </Results>
</TestRun>